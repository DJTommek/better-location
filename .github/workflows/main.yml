on:
  push:
    branches:
      - master

name: ðŸš€ Test and deploy to production

env:
  PHP_VERSION_REQUIRED: 8.2

jobs:
  validate:
    name: ðŸ”§ Run analysis and tests
    runs-on: ubuntu-latest
    env:
      COMPOSER_NO_DEV: 0
    steps:
      - name: ðŸšš Download latest code
        uses: actions/checkout@v4

      - name: ðŸšš Prepare PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION_REQUIRED }}
          extensions: mbstring, exif

      - name: ðŸšš Install Composer development dependencies
        working-directory: ./
        run: composer install

      - name: ðŸš€ Run PHPStan analysis
        uses: php-actions/phpstan@v3
        with:
          version: composer
          php_version: ${{ env.PHP_VERSION_REQUIRED }}
          autoload_file: src/bootstrap.php
          configuration: phpstan.neon
          memory_limit: 512m
          php_extensions: mbstring exif

      - name: ðŸš€ Run PHPUnit tests (without requests)
        uses: php-actions/phpunit@v3
        with:
          version: 9
          php_version: ${{ env.PHP_VERSION_REQUIRED }}
          bootstrap: src/bootstrap.php
          configuration: phpunit.xml
          exclude_group: request,no-github-action
          php_extensions: mbstring exif

  web-deploy:
    name: ðŸŽ‰ Deploy on production
    needs: [ validate ]
    runs-on: ubuntu-latest
    env:
      COMPOSER_NO_DEV: 1
    steps:
      - name: ðŸšš Download latest code
        uses: actions/checkout@v3

      - name: ðŸšš Prepare PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION_REQUIRED }}
          extensions: mbstring, exif

      - name: ðŸšš Install Composer production dependencies
        working-directory: ./
        run: composer install

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          server-dir: ${{ secrets.ftp_server_dir }}
          dry-run: false
          exclude: |
            **/.git*
            **/.git*/**
            data/config.local.example.neon
            asset/
            asset/**
            temp/**
            tests/
            tests/**
            composer.json
            composer.lock
            readme.md
            web.config
            LICENSE
            README.md
            phpstan.neon
            phpstan-baseline.neon
            phpunit.xml

      - name: ðŸ§¹ Post deploy script - run
        id: postdeployscript
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://better-location.palider.cz/post-deploy.php?password=${{ secrets.SCRIPT_PASSWORD }}'
          method: 'DELETE'
          timeout: 20000

      - name: ðŸ§¹ Post deploy script - show output
        run: |
          echo ${{ steps.postdeployscript.outputs.headers }}
          echo ${{ steps.postdeployscript.outputs.response }}

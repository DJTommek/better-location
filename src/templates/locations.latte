{templateType App\Web\Locations\LocationsTemplate}
{layout '@layout.latte'}
{block content}
	<div id="content-locations">
		<div class="row g-0">
			<div class="col-12 col-md-6 header-left text-center text-md-start">
				<!-- @TODO -->
			</div>
			<div class="col-12 col-md-6 header-right text-center text-md-end">
				<!-- @TODO -->
			</div>
		</div>

		<div class="row g-0">
			<div class="col-12 col-md-4 col-xl-3" id="tab-locations">
				<div class="list-group" role="tablist">
					{foreach $collection->getLocations() as $location}
						<button
								id="list-group-item-location-{$location->getCoordinates()->hash()}"
								class="list-group-item list-group-item-action list-group-item-light {$iterator->first ? 'active'}"
								data-bs-toggle="list"
								data-location="{$location->getCoordinates()->hash()}"
								href="#content-locations-{$location->getCoordinates()->hash()}"
								role="tab"
						>
							<div class="d-flex justify-content-between">
								<span n:if="$login->isLogged()" class="favourite">
									{if $user->getFavourite($location->getLat(), $location->getLon()) !== null}
										<a href="{$basePath}/{$location->getLat()},{$location->getLon()}?action=delete" title="Remove from favourites" class="text-danger">
											<i class="fa fa-fw icon-heart"></i>
										</a>
									{else}
										<a href="{$basePath}/{$location->getLat()},{$location->getLon()}?action=add" title="Add to favourites" class="text-danger">
											<i class="fa fa-fw icon-heart-o"></i>
										</a>
									{/if}
								</span>
								{$location->__toString()}
								<a href="{$basePath}/{$location->__toString()}" target="_blank">
									<i class="fa fa-external-link"></i>
								</a>
							</div>
						</button>
					{/foreach}
				</div>
				<div class="downloads text-center">
					<i class="fa fa-download"></i> Download all as
					<a href="{$basePath}/{$collection->getKeys()|join:';'}?format=gpx">gpx</a> |
					<a href="{$basePath}/{$collection->getKeys()|join:';'}?format=kml">kml</a>
				</div>
			</div>
			<div class="col-12 col-md-8 col-xl-9" id="map-dynamic">
				<div id="map-dynamic-leaflet"></div>
			</div>
		</div>

		<div class="tab-content">
			{foreach $collection->getLocations() as $location}
				<div id="content-locations-{$location->getCoordinates()->hash()}" class="tab-pane fade {$iterator->first ? 'show active'}" role="tabpanel">
					<div class="text-center">
						<div class="address" n:ifcontent>
							{$location->getAddress()}
						</div>
						<div class="timezone" n:if="$location->getTimezoneData()">
							Local time: <b title="YYYY-MM-DD hh:mm:ss. Time might be few minutes out of date due to caching.">{$location->getTimezoneData()->time->format(\App\Config::DATETIME_FORMAT)}</b>,
							Timezone: <b>{$location->getTimezoneData()->timezone->getName()}</b>,
							<abbr title="Coordinated Universal Time">UTC</abbr>UTC Offset: <b>{$location->getTimezoneData()->formatNowOffset()}</b>,
							<abbr title="Daylight saving time">DST</abbr>: <b>{$location->getTimezoneData()->isDst() ? 'yes' : 'no'}</b>
						</div>
						<div class="downloads">
							<i class="fa fa-download"></i> Download as
							<a href="{$basePath}/{$location->key()}?format=gpx">gpx</a> |
							<a href="{$basePath}/{$location->key()}?format=kml">kml</a>
						</div>
						<div class="elevation" n:if="$location->getCoordinates()->getElevation() !== null">
							<abbr title="Above mean sea level">AMSL</abbr>: {$location->getCoordinates()->getElevation()} meters
						</div>
						<div class="telegram">
							<a href="{App\TelegramCustomWrapper\TelegramHelper::generateStartLocation($location->getLat(), $location->getLon())}" target="_blank" title="Telegram">
								<i class="fa fa-telegram"></i>
								@BetterLocationBot
							</a>
						</div>
					</div>
					<div class="websites table-responsive">
						<table class="table table-nonfluid table-hover table-striped table-sm">
							<thead>
							<tr>
								<th>Service</th>
								<th>Share</th>
								<th>Drive</th>
								<th>Text</th>
							</tr>
							</thead>
							<tbody>
							{foreach $websites[$location->__toString()] as $service}
								{if isset($service['share']) || isset($service['drive']) || isset($service['text'])}
									<tr>
										<td class="service-title">
								<span>
									{$service['name']}
								</span>
										</td>
										<td class="service-share-link">
											{if isset($service['share'])}
												<a href="{$service['share']}" target="_blank">share</a>
											{/if}
										</td>
										<td class="service-drive-link">
											{if isset($service['drive'])}
												<a href="{$service['drive']}" target="_blank">drive</a>
											{/if}
										</td>
										<td class="service-share-text text-nowrap">
											{if isset($service['text'])}
												<i class="fa fa-fw fa-clipboard copy-to-clipboard" data-clipboard-text="{$service['text']}" title="Copy text to clipboard"></i>
												{$service['text']}
											{/if}
										</td>
									</tr>
								{/if}
							{/foreach}
							</tbody>
						</table>
					</div>
				</div>
			{/foreach}
		</div>
	</div>
{/block}

{block title}
	{if count($collection) === 1}
		{if $collection->getFirst()->getAddress()}
			{$collection->getFirst()->getAddress()} -
		{/if}
		{$collection->getFirst()->key()}
	{else}
		{count($collection)} locations
	{/if}
{/block}
{block cssLibs}
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==" crossorigin=""/>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol@v0.74.0/dist/L.Control.Locate.min.css"/>
{/block}
{block jsLibs}
	<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js" integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==" crossorigin=""></script>
	<script src="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol@v0.74.0/dist/L.Control.Locate.min.js" charset="utf-8"></script>
{/block}
{block js}
	<script>
		function distanceHuman(meters) {
			if (meters > 10_000) {
				return Math.floor(meters / 1000) + 'km';
			} else if (meters > 1000) {
				return Math.floor(meters / 10) / 100 + 'km'; // keep rounded to two decimal places
			}
			return Math.floor(meters) + 'm';
		}

		const locations = {$collectionJs};
		const listGroupTabs = {};
		const mapData = {
			map: null,
			markers: {
				browserLocation: null,
				locations: {},
			},
			circles: {
				browserLocationAccuracy: null,
			},
			icons: {
				active: L.icon({
					iconUrl: {$basePath} +'/img/icons/marker-icon-active.png',
					iconSize: [25, 41],
					iconAnchor: [13, 41],
				}),
				inactive: L.icon({
					iconUrl: {$basePath} +'/img/icons/marker-icon-inactive.png',
					iconSize: [25, 41],
					iconAnchor: [13, 41],
				}),
			},
			layers: {
				{syntax off}
				baseLayers: {
					// @TODO change access_token (this is taken from from example on https://leafletjs.com/examples/quick-start/)
					'OSM default': L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
						maxZoom: 22,
						attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank" rel="noopener">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/" target="_blank" rel="noopener">Mapbox</a>',
						id: 'mapbox/streets-v11',
						tileSize: 512,
						zoomOffset: -1,
					}),
					'Waze default': L.tileLayer('https://worldtiles{s}.waze.com/tiles/{z}/{x}/{y}.png', {
						minZoom: 2,
						maxZoom: 18,
						attribution: '<a href="https://www.waze.com/legal/tos" target="_blank" rel="noopener">Waze</a>',
						tileSize: 256,
						zoomOffset: 0,
						subdomains: '1234',
					}),
					'Mapy.cz hiking': L.tileLayer('https://mapserver.mapy.cz/turist-m/{z}-{x}-{y}', {
						minZoom: 2,
						maxZoom: 18,
						attribution: '<a href="https://o.seznam.cz" target="_blank" rel="noopener">Seznam.cz, a.s.</a>',
						tileSize: 256,
						zoomOffset: 0,
					}),
					// @TODO change app_id and app_code (these are taken from wego.here.com)
					'HERE default': L.tileLayer('https://{s}.base.maps.ls.hereapi.com/maptile/2.1/basetile/newest/normal.day/{z}/{x}/{y}/512/png8?app_id=VgTVFr1a0ft1qGcLCVJ6&app_code=LJXqQ8ErW71UsRUK3R33Ow', {
						minZoom: 2,
						maxZoom: 18,
						attribution: '<a href="https://legal.here.com/en-gb/terms/documentation-license" target="_blank" rel="noopener">&copy; HERE</a>',
						tileSize: 256,
						zoomOffset: 0,
						subdomains: '1234',
					}),
					// @TODO change app_id and app_code (these are taken from wego.here.com)
					'HERE satellite': L.tileLayer('https://{s}.aerial.maps.ls.hereapi.com/maptile/2.1/basetile/newest/satellite.day/{z}/{x}/{y}/512/png8?app_id=VgTVFr1a0ft1qGcLCVJ6&app_code=LJXqQ8ErW71UsRUK3R33Ow', {
						minZoom: 2,
						maxZoom: 18,
						attribution: '<a href="https://legal.here.com/en-gb/terms/documentation-license" target="_blank" rel="noopener">&copy; HERE</a>',
						tileSize: 256,
						zoomOffset: 0,
						subdomains: '1234',
					}),
				},
				{/syntax}
			}
		}
		$(function () {
			mapData.map = L.map('map-dynamic-leaflet').setView(locations[0]['coords'], 13);
			mapData.map.fitBounds(new L.LatLngBounds({$allCoords}), {'maxZoom': 13});

			mapData.layers.baseLayers['OSM default'].addTo(mapData.map);
			L.control.layers(mapData.layers.baseLayers, mapData.layers.overlays).addTo(mapData.map);
			locations.forEach(function (location, index) {
				const isFirst = (index === 0);

				listGroupTabs[location.hash] = new bootstrap.Tab($('#list-group-item-location-' + location.hash)[0]);

				const marker = L.marker(
					[location.lat, location.lon],
					{
						icon: isFirst ? mapData.icons.active : mapData.icons.inactive,
					}
				);
				let popupContent = '<p>';
				popupContent += 'Coordinates: <b><a href="' + {$basePath} + '/' + location.key + '">' + location.key + '</a></b>';
				popupContent += '<br>';
				popupContent += 'Address: <b>' + (location.address ?? 'Unknown address') + '</b>';
				popupContent += '</p>';
				marker.bindPopup(popupContent, {
					offset: [0, -30],
				});
				marker.on('popupopen', function (event) {
					listGroupTabs[location.hash].show();
					for (const [locationMarkerTempHash, locationMarkerTemp] of Object.entries(mapData.markers.locations)) {
						if (locationMarkerTempHash === location.hash) {
							locationMarkerTemp.setIcon(mapData.icons.active);
						} else {
							locationMarkerTemp.setIcon(mapData.icons.inactive);
						}
					}
				});
				marker.addTo(mapData.map);
				mapData.markers.locations[location.hash] = marker;
			});

			const locateControl = L.control.locate({
				setView: false,
				strings: {
					popup: function (params) {
						const markerLatLng = locateControl._marker.getLatLng();
						const latLon = markerLatLng.lat.toFixed(6) + ',' + markerLatLng.lng.toFixed(6);
						let popupContent = '<p>';
						popupContent += 'Browser location: <b><a href="' + {$basePath} + '/' + latLon + '">' + latLon + '</a></b> (accuracy <b>' + distanceHuman(params.distance) + '</b>)';
						// popupContent += '<br>Distance to currently opened location: <b>' + distanceHuman(markerLatLng.distanceTo(mapData.markers.pageLocation.getLatLng())) + '</b>';
						return popupContent;
					}
				}
			}).addTo(mapData.map);

			// If access to browser location is granted, show it in the map automatically but without pan and zoom
			navigator.permissions.query({
				name: 'geolocation',
			}).then(function (result) {
				if (result.state === 'granted') {
					locateControl.start();
				}
			});

			$('#tab-locations .list-group-item').on('show.bs.tab', function (event) {
				const locationHash = $(this).data('location');
				console.log('Opening popup for location ' + locationHash);
				mapData.markers.locations[locationHash].openPopup();
			});
		});
	</script>
{/block}
